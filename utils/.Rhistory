setwd()
getwd
getwd()
library(DT)
library(dplyr)
# read table -------------------------------------------------
metadata <- readxl::read_xls(file.path(getwd(),'Metadata_dataManagement.xlsx'))
# Dynamic table -------------------------------------------------
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)
library(shiny); runApp('AFFORD_shiny.R')
install.packages('crudr')
runApp('AFFORD_shiny.R')
library(crudr)
install.packages('crudr')
# installing/loading the package:
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
updateR()
library(shiny); runApp('AFFORD_shiny.R')
install.packages('crudr')
library(crudr)
remotes::install_github('eauleaf/crudr')
remotes::install_github('eauleaf/crudr')
install.packages('remotes')
remotes::install_github('eauleaf/crudr')
runApp('AFFORD_shiny.R')
install.packages('dbplyr')
runApp('AFFORD_shiny.R')
# Read filenames from directory
metadata <- read.csv(file.path(here::here(),'Metadata_filenames.csv'))
metadata <- read.csv('Metadata_filenames.csv')
metadata
folderWithPics <- paste0('Spring_jpg',.Platform$file.sep)
# add html component to column with file names
sourceAdress <- paste0(folderWithPics, metadata$file)
sourceAddress <- file.path(here::here(),'Spring_jpg', metadata$file)
sourceAdress <- paste0(folderWithPics, metadata$file)
sourceAddress <- file.path('Spring_jpg', metadata$file)
metadata$pic <- paste0('<a href =\'',sourceAdress,' \'>',
'<img src=\'', sourceAdress, '\' height=\'70\' witdth = \'70\'',
'alt=\'Image\'','/> </a>')
metadata$pic
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
read.csv('Metadata_filenames.csv')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
# Function to read data from CSV file
read_data <- function() {
data$table_data <- read.csv('Metadata_filenames.csv')  # Replace with your file path
}
# Initial data read
read_data()
# Function to read data from CSV file
read_data <- function() {
data$table_data <- read.csv('Metadata_filenames.csv')  # Replace with your file path
}
# Initial data read
read_data()
read_data <- function() {
data$table_data <- read.csv('Metadata_filenames.csv')  # Replace with your file path
}
# Initial data read
read_data()
runApp('AFFORD_shiny.R')
read_data <- function() {
data$table_data <- read.csv('Metadata_filenames.csv')  # Replace with your file path
}
read_data()
read.csv("Metadata_filenames.csv")
data$table_data
# Function to read data from CSV file
read_data <- function() {
data$table_data <- read.csv('Metadata_filenames.csv')  # Replace with your file path
}
read_data()
read_data("Metadata_filenames.csv")
runApp('AFFORD_shiny.R')
read_data <- function() {
tryCatch({
data$table_data <- read.csv('Metadata_filenames.csv')  # Replace with your file path
}, error = function(e) {
cat("Error reading CSV file:", conditionMessage(e), "\n")
})
}
This code will print an error message if there's an issue with reading the CSV file. If there's a problem with the file path or the file itself, this should help identify the issue.
read_data <- function() {
tryCatch({
data$table_data <- read.csv('Metadata_filenames.csv')  # Replace with your file path
}, error = function(e) {
cat("Error reading CSV file:", conditionMessage(e), "\n")
})
}
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
#-------------------------------------------------
# Read filenames from directory
metadata <- read.csv(file.path(here::here(),'Metadata_filenames.csv'))
#-------------------------------------------------
# Read filenames from directory
metadata <- read.csv(file.path(here::here(),'Metadata_filenames.csv'))
library(DT)
library(here )
install.packages('here')
library(DT)
library(here )
#-------------------------------------------------
# Read filenames from directory
metadata <- read.csv(file.path(here::here(),'Metadata_filenames.csv'))
folderWithPics <- paste0('Spring_jpg',.Platform$file.sep)
# add html component to column with file names
sourceAdress <- paste0(folderWithPics, metadata$file)
sourceAddress <- file.path(here::here(),'Spring_jpg', metadata$file)
metadata$pic <- paste0('<a href =\'',sourceAdress,' \'>',
'<img src=\'', sourceAdress, '\' height=\'70\' witdth = \'70\'',
'alt=\'Image\'','/> </a>')
metadata
getwd()
write.csv(metadata,'Metadata_filenames_html.csv')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
metadata
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes','Scroller'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(
pageLength = 20,
dom = 'Btip',
buttons=c('searchPanes','copy','csv','excel','pdf'),
language = list(searchPanes = list(collapse = "FILTER ROWS")),
#scroller = TRUE, #If this is TRUE I can't disabled the horiz scroll
scrollY = 1000,
scrollX = FALSE,
scrollCollapse =  FALSE, # this fixes display issues with filter pane depending on selection
#paging = FALSE,
columnDefs = list(
list(searchPanes = list(show = FALSE), targets = 5)  #'target' will change how many panes
)
)
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes','Scroller'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(
pageLength = 20,
dom = 'Btip',
buttons=c('searchPanes','copy','csv','excel','pdf'),
language = list(searchPanes = list(collapse = "FILTER ROWS")),
#scroller = TRUE, #If this is TRUE I can't disabled the horiz scroll
scrollY = 1000,
scrollX = FALSE,
scrollCollapse =  FALSE, # this fixes display issues with filter pane depending on selection
#paging = FALSE,
columnDefs = list(
list(searchPanes = list(show = FALSE), targets = 5)  #'target' will change how many panes
)
))
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes','Scroller'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(
pageLength = 20,
dom = 'Btip',
buttons=c('copy','csv','excel','pdf'),
#scroller = TRUE, #If this is TRUE I can't disabled the horiz scroll
scrollY = 1000,
scrollX = FALSE,
scrollCollapse =  FALSE, # this fixes display issues with filter pane depending on selection
#paging = FALSE,
)
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes','Scroller'),
#selection = 'none',
selection = 1,
escape = FALSE
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select',),
#selection = 'none',
selection = 1,
escape = FALSE
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select'),
#selection = 'none',
selection = 1,
escape = FALSE
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
#selection = 'none',
selection = 1,
escape = FALSE
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
#selection = 'none',
selection = 1,
escape = FALSE
)
datatable(
metadata, filter = "top")
datatable(
metadata, filter = "top",escape=FALSE
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
escape = FALSE
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
escape = TRUE
)
metadata <- read.csv(file.path(here::here(),'Metadata_filenames.csv'))
folderWithPics <- paste0('Spring_jpg',.Platform$file.sep)
# add html component to column with file names
sourceAdress <- paste0(folderWithPics, metadata$file)
sourceAddress <- file.path(here::here(),'Spring_jpg', metadata$file)
metadata$pic <- paste0('<a href =\'',sourceAdress,' \'>',
'<img src=\'', sourceAdress, '\' height=\'70\' width = \'70\'',
'alt=\'Image\'','/> </a>')
metadata$pic
write.csv(metadata,'Metadata_filenames_html.csv')
runApp('AFFORD_shiny.R')
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
escape = FALSE
)
metadata$pic
paste0('<a href =\'',sourceAdress,' \'>',
'<img src=\'', sourceAdress,'\' height=\'70\' width = \'70\'',
'alt=\'Image\'','/> </a>')
paste0('<a href =\'',sourceAdress,'\'>',
'<img src=\'', sourceAdress,'\' height=\'70\' width = \'70\'',
'alt=\'Image\'','/> </a>')
paste0('<a href =\'',sourceAdress,'\'>',
'<img src=\'', sourceAdress,'\' height=\'70\' width = \'70\'',
'alt=\'Image\'','/> </a>')
metadata$pic <- paste0('<a href =\'',sourceAdress,'\'>',
'<img src=\'', sourceAdress,'\' height=\'70\' width = \'70\'',
'alt=\'Image\'','/> </a>')
metadata$pic
write.csv(metadata,'Metadata_filenames_html.csv')
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
escape = FALSE
)
metadata$pic
runApp('AFFORD_shiny.R')
install.packages('kntr')
install.packages('knitr')
library(DT)
library(here )
#-------------------------------------------------
# Read filenames from directory
metadata <- read.csv(file.path(here::here(),'Metadata_filenames.csv'))
folderWithPics <- paste0('Spring_jpg',.Platform$file.sep)
# add html component to column with file names
sourceAdress <- paste0(folderWithPics, metadata$file)
sourceAddress <- file.path(here::here(),'Spring_jpg', metadata$file)
metadata$pic <- paste0('<a href =\'',sourceAdress,'\'>',
'<img src=\'', sourceAdress,'\' height=\'70\' width = \'70\'',
'alt=\'Image\'','/> </a>')
metadata$pic
datatable(
metadata, filter = "top",
rownames=FALSE
)
datatable(
metadata, filter = "top",
rownames = FALSE
)
install.packages('markdown')
---
title: "Exploring picture-data"
library(DT)
+
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # See CSS classes https://datatables.net/manual/styling/classes
escape = FALSE
)
library(DT)
library(here)
# Read filenames from directory
metadata <- read.csv(file.path(here::here(), 'Metadata_filenames.csv'))
folderWithPics <- paste0('Spring_jpg', .Platform$file.sep)
# Add html component to column with file names
sourceAdress <- paste0(folderWithPics, metadata$file)
metadata$pic <- paste0('<a href =\'', sourceAdress, '\'>',
'<img src=\'', sourceAdress, '\' height=\'70\' width = \'70\'',
' alt=\'Image\'/> </a>')
datatable(
metadata, escape=FALSE
)
library(shiny); runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
install.packages("tableOutput)
install.packages("tableOutput")
runApp('AFFORD_shiny.R')
install.packages('xtable')
install.packages('xtable')
install.packages("xtable")
library(xtable)
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
install.packages("shiny")
install.packages("shiny")
library(shiny); runApp('AFFORD_shiny.R')
runApp()
runApp()
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
sessionInfo()
runApp('AFFORD_shiny.R')
library(shiny); runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='gorkafraga',
token='4B7AB286989C3F245ABE8FC8CDE2DFE5',
secret='<SECRET>')
rsconnect::setAccountInfo(name='gorkafraga',
token='4B7AB286989C3F245ABE8FC8CDE2DFE5',
secret='XXWu27srl6ETCliVF46LgE7ty4pZeBtw+GHF86Zu')
install.packages('jpg')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
library(haven)
LEMO_cogni_fbl <- read_sav("C:/Users/GFraga/Desktop/correlations a la carte/LEMO_cogni_fbl.sav")
View(LEMO_cogni_fbl)
dat <- LEMO_cogni_fbl
dat_trim <- c(dat$Subj_ID,dat$slrt2b_word_corr_pr, dat$rias_nonverbal_tval,dat$FBLA_meanRT_b1_q2,dat$FBLA_meanRT_total_q1234)
dat_trim <- as.data.frame(c(dat$Subj_ID,dat$slrt2b_word_corr_pr, dat$rias_nonverbal_tval,dat$FBLA_meanRT_b1_q2,dat$FBLA_meanRT_total_q1234))
dat_trim
dat_trim <- as.data.frame(cbind(dat$Subj_ID,dat$slrt2b_word_corr_pr, dat$rias_nonverbal_tval,dat$FBLA_meanRT_b1_q2,dat$FBLA_meanRT_total_q1234))
dat_trim
colnames(dat_trim) <- c('subject','scoreA','scoreB','scoreC','scoreD')
dat_trim
dat_trim$subject
gsub('gpl00','s',dat_trim$subject)
gsub('gpl0','s',dat_trim$subject)
dat_trim$subject <- gsub('gpl0','s',dat_trim$subject)
dat_trim
getwd()
write.csv(dat_trim,'data.csv')
getwd()
cd ..
setwd("C:/Users/GFraga/Documents/GitHub/CRS_AFFORD/utils')
setwd("C:/Users/GFraga/Documents/GitHub/CRS_AFFORD/utils")
ls
ls()
ls()
dir()
alldat <- read.csv('data.csv')
runApp()
library(shiny); runApp('CorrExplorer_Shiny.R')
runApp('CorrExplorer_Shiny.R')
Packages <- c("shiny","haven","ggplot2","GGally","cowplot","dplyr","ggExtra","raster")
apply(Packages, library, character.only = TRUE, invisible())
Packages <- c("shiny","haven","ggplot2","GGally","cowplot","dplyr","ggExtra","raster")
lapply(Packages,library)
install.packages('ggplot2')
install.packages('GGally')
install.packages('cowplot')
install.packages('ggExtra')
install.packages('raster')
runApp('CorrExplorer_Shiny.R')
runApp('CorrExplorer_Shiny.R')
runApp('CorrExplorer_Shiny.R')
alldat
#Packages <- c("shiny","ggplot2","GGally","cowplot","dplyr","ggExtra","raster")
#apply(Packages, library, character.only = TRUE, invisible())
# read data
alldat <- read.csv('data.csv')
# correlation method
mymethod <- "pearson"
selected_predictor <- 'scoreA'
selected_predicted <- 'scoreB'
selected <- c(selected_predicted,selected_predictor)
selected
alldat
runApp('CorrExplorer_Shiny.R')
alldat <- read.csv('data.csv',row.names = FALSE)
alldat <- read.csv('data.csv',row.names = 0
)
alldat <- read.csv('data.csv', row.names = NULL)
alldat
rm(list=ls())
#Packages <- c("shiny","ggplot2","GGally","cowplot","dplyr","ggExtra","raster")
#apply(Packages, library, character.only = TRUE, invisible())
# read data
alldat <- read.csv('data.csv',row.names = FALSE)
alldat <- read.csv('data.csv')
# correlation method
mymethod <- "pearson"
selected_predictor <- 'scoreA'
selected_predicted <- 'scoreB'
selected <- c(selected_predicted,selected_predictor)
selected_predicted
selected
runApp('CorrExplorer_Shiny.R')
install.packages('dplyr')
runApp('CorrExplorer_Shiny.R')
install.packages(ggplot)
install.packages('ggplot')
install.packages('ggplot2')
library(ggplot2)
runApp('CorrExplorer_Shiny.R')
