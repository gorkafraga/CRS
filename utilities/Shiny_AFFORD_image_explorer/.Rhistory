dat[,c('ENERO','FEBRERO')]
dat[,c("PROPIEDAD",'ENERO','FEBRERO')]
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
propiedades <- list('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
propiedades
propiedades
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
amagor <- list('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
rm(list=ls())
amagor <- list('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
amagor
amagor[[1]]
amagor[[1]][1]
amagor[[1]][2]
attributes(amagor)
attr(amagor)
amagor
str(amagor)
Garaje <- as.factor(c(1:10))
Garaje
propiedad <- c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo <- c('Gastos','Ingresos')
garaje <- as.factor(c(1:10))
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
rm(list=ls())
propiedad <- c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo <- c('Gastos','Ingresos')
garaje <- as.factor(c(1:10))
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
rm(list=ls())
propiedad <- c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo_pago <- c('Gastos','Ingresos')
tipo_propiedad <- c('Piso','Chalet','Garaje')
garaje <- as.factor(c(1:10))
estado <- c('vendida','operativa')
concepto <- c('agua','comunidad','electricidad',
'ibi','impuestos','gas','varios')
banco <- c('BBK','BBVA','cash','BBK_BBVA')
list(propiedad)
list(propiedad,tipo_pago)
as.list(propiedad)
#
amagor <- as.list(propiedad)
amagor
amagor[[5]]
amagor[[5]] <- as.list(banco)
amagor
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
rm(list=ls())
propiedad <- c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo_pago <- c('Gastos','Ingresos')
tipo_propiedad <- c('Piso','Chalet','Garaje')
garaje <- as.factor(c(1:10))
estado <- c('vendida','operativa')
concepto <- c('agua','comunidad','electricidad','ibi','impuestos','gas','varios')
banco <- c('BBK','BBVA','cash','BBK_BBVA')
#
amagor <- as.list(propiedad)
amagor
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
rm(list=ls())
propiedad <- list('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo_pago <- list('Gastos','Ingresos')
tipo_propiedad <- list('Piso','Chalet','Garaje')
garaje <- list(as.factor(1:10))
estado <- list('vendida','operativa')
concepto <- list('agua','comunidad','electricidad','ibi','impuestos','gas','varios')
banco <- list('BBK','BBVA','cash','BBK_BBVA')
#
amagor <- as.list(propiedad)
amagor
propiedad
banco
propiedad[[1]][1]
propiedad[[1]][2]
propiedad[[1]][[2]]
propiedad[[1]][[1]]
propiedad[[1]][[2]] <- 'Piso'
propiedad
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
rm(list=ls())
propiedad <- as.factor('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo_pago <- as.factor('Gastos','Ingresos')
tipo_propiedad <- as.factor('Piso','Chalet','Garaje')
garaje <- as.factor(as.factor(1:10))
estado <- as.factor('vendida','operativa')
concepto <- as.factor('agua','comunidad','electricidad','ibi','impuestos','gas','varios')
banco <- as.factor('BBK','BBVA','cash','BBK_BBVA')
#
amagor <- as.as.factor(propiedad)
tibble::as.tibble(propiedad,tipo_pago)
tibble::as.tibble(propiedad)
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
rm(list=ls())
propiedad <- as.factor('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo_pago <- as.factor('Gastos','Ingresos')
tipo_propiedad <- as.factor('Piso','Chalet','Garaje')
garaje <- as.factor(as.factor(1:10))
estado <- as.factor('vendida','operativa')
concepto <- as.factor('agua','comunidad','electricidad','ibi','impuestos','gas','varios')
banco <- as.factor('BBK','BBVA','cash','BBK_BBVA')
#
propiedad <- as.factor(c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
rm(list=ls())
propiedad <- as.factor(c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'))
tipo_pago <- as.factor(c('Gastos','Ingresos'))
tipo_propiedad <- as.factor(c('Piso','Chalet','Garaje'))
garaje <- as.factor(c(1:10))
estado <- as.factor(c('vendida','operativa'))
concepto <- as.factor(c('agua','comunidad','electricidad','ibi','impuestos','gas','varios'))
banco <- as.factor(c('BBK','BBVA','cash','BBK_BBVA'))
#
tibble(propeidad)
tibble(propiedad
)
tibble::as.tibble(propiedad)
tibble::as.tibble(propiedad,tipo_de_pagpo)
tibble::as.tibble(propiedad,tipo_de_pago)
tibble::as.tibble(propiedad,tipo_pago)
tibble::as.tibble(c(propiedad,tipo_pago))
tidyr::expand(propiedad,tipo_pago)
tidyr::expand(c(propiedad,tipo_pago))
c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tidyr::expand(c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'),c('Gastos','Ingresos'))
expand(as.data.frame(propiedad))
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
library(tidyr)
expand(as.data.frame(propiedad))
expand(as.data.frame(propiedad),nesting(tipo_pago))
expand(as.data.frame(propiedad),nesting(tipo_pago,propiedad))
expand(as.data.frame(propiedad),nesting(list=c(tipo_pago,propiedad))
)
expand(as.data.frame(propiedad),nesting(list=c(tipo_pago,propiedad)))
as.data.frame(propiedad)
expand(as.data.frame(propiedad),nesting(tipo_pago)
)
propiedad <- as.data.frame(c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'))
expand(propiedad,nesting(tipo_pago))
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
library(tidyr)
rm(list=ls())
propiedad <-  c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo_pago <- c('Gastos','Ingresos')
tipo_propiedad <- c('Piso','Chalet','Garaje')
garaje <- c(1:10)
estado <- c('vendida','operativa')
concepto <- c('agua','comunidad','electricidad','ibi','impuestos','gas','varios')
banco <- c('BBK','BBVA','cash','BBK_BBVA')
#
tibble(propiedad,tipo_pago)
tibble(propiedad = propiedad,tipo_pago=tipo_pago)
tibble(propiedad = c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'),
tipo_pago = c('Gastos','Ingresos'),
tipo_propiedad = c('Piso','Chalet','Garaje'),
garaje= c(1:10),
estado= c('vendida','operativa'))
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
library(tidyr)
rm(list=ls())
tibble(propiedad = c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'),
tipo_pago = c('Gastos','Ingresos'),
tipo_propiedad = c('Piso','Chalet','Garaje'),
garaje= c(1:10),
estado= c('vendida','operativa'))
concepto <- c('agua','comunidad','electricidad','ibi','impuestos','gas','varios')
banco <- c('BBK','BBVA','cash','BBK_BBVA')
#
tibble(propiedad = c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'),
tibble(propiedad = c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'),
garaje= factor("",levels(c(1:10))))
fruits <- tibble(
type   = c("apple", "orange", "apple", "orange", "orange", "orange"),
year   = c(2010, 2010, 2012, 2010, 2010, 2012),
size  =  factor(
c("XS", "S",  "M", "S", "S", "M"),
levels = c("XS", "S", "M", "L")
),
weights = rnorm(6, as.numeric(size) + 2)
)
fruits
rm(list=ls())
tibble(propiedad = c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'),
garaje= factor( "",levels=c(1:10))
)
tibble(propiedad = c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')),
tipo_pago = factor( "",levels=c('Gastos','Ingresos')),
tipo_propiedad = factor( "",levels=c('Piso','Chalet','Garaje')),
estado= factor( "",levels=c('vendida','operativa')),
concepto = factor( "",levels=c('agua','comunidad','electricidad','ibi','impuestos','gas','varios')),
banco = factor( "",levels=c('BBK','BBVA','cash','BBK_BBVA')),
garaje= factor( "",levels=c(1:10)),
)
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
library(tidyr)
rm(list=ls())
tibble(propiedad = c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')),
tipo_pago = factor( "",levels=c('Gastos','Ingresos')),
tipo_propiedad = factor( "",levels=c('Piso','Chalet','Garaje')),
estado= factor( "",levels=c('vendida','operativa')),
concepto = factor( "",levels=c('agua','comunidad','electricidad','ibi','impuestos','gas','varios')),
banco = factor( "",levels=c('BBK','BBVA','cash','BBK_BBVA')),
garaje= factor( "",levels=c(1:10)),
)
tibble(propiedad = c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')),
tipo_pago = factor( "",levels=c('Gastos','Ingresos')))
tibble(propiedad = factor(c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'),levels=c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')),
tipo_pago = factor( "",levels=c('Gastos','Ingresos')),
tipo_propiedad = factor("",levels=c('Piso','Chalet','Garaje')),
estado= factor( "",levels=c('vendida','operativa')),
concepto = factor( "",levels=c('agua','comunidad','electricidad','ibi','impuestos','gas','varios')),
banco = factor( "",levels=c('BBK','BBVA','cash','BBK_BBVA')),
garaje= factor( "",levels=c(1:10))
)
amagor <-
tibble(propiedad = factor(c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'),levels=c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')),
tipo_pago = factor( "",levels=c('Gastos','Ingresos')),
tipo_propiedad = factor("",levels=c('Piso','Chalet','Garaje')),
estado= factor( "",levels=c('vendida','operativa')),
concepto = factor( "",levels=c('agua','comunidad','electricidad','ibi','impuestos','gas','varios')),
banco = factor( "",levels=c('BBK','BBVA','cash','BBK_BBVA')),
garaje= factor( "",levels=c(1:10))
)
expand(amagor)
amagor
expand(amagor,nesting(propiedad,tipo_pago))
expand(amagor,nesting(propiedad,levels(tipo_pago))
expand(amagor,nesting(propiedad,levels(tipo_pago)))
banco
str(amagor)
complete(amagor)
propiedad <- c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo_pago <- c('Gastos','Ingresos')
propiedad <- c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo_pago <- c('Gastos','Ingresos')
tipo_propiedad<-c('Piso','Chalet','Garaje')
estado <-c('vendida','operativa')
concepto <- c('agua','comunidad','electricidad','ibi','impuestos','gas','varios')
banco <- c('BBK','BBVA','cash','BBK_BBVA')
garaje <- c(1:10)
amagor <-
tibble(propiedad = factor(c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos'),levels=c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')),
tipo_pago = factor( "",levels=c('Gastos','Ingresos')),
tipo_propiedad = factor("",levels=),
estado= factor( "",levels=c('vendida','operativa')),
concepto = factor( "",levels=c('agua','comunidad','electricidad','ibi','impuestos','gas','varios')),
banco = factor( "",levels=c('BBK','BBVA','cash','BBK_BBVA')),
garaje= factor( "",levels=c(1:10))
)
rep(tipo_pago,length(propiedad))
# CREATE TEMPLATE FOR AMAGOR DATASET
#--------------------------------------
library(tidyr)
rm(list=ls())
propiedad <- c('Eduardo Coste_N4Bpiso3B','Liendo','Abatxolo','Pablo Sorozabal','Los Banos')
tipo_pago <- c('Gastos','Ingresos')
tipo_propiedad<-c('Piso','Chalet','Garaje')
estado <-c('vendida','operativa')
concepto <- c('agua','comunidad','electricidad','ibi','impuestos','gas','varios')
banco <- c('BBK','BBVA','cash','BBK_BBVA')
garaje <- c(1:10)
amagor <-
tibble(propiedad = factor(propiedad,levels=propiedad),
tipo_pago = factor( rep(tipo_pago,length(propiedad)),levels=tipo_pago),
tipo_propiedad = factor(rep(tipo_propiedad,length(propiedad)),levels=tipo_propiedad),
estado= factor(rep(estado,length(propiedad)),levels=estado),
concepto = factor(rep(concepto,length(propiedad)),levels=concepto),
banco =factor(rep(banco,length(propiedad)),levels=banco),
garaje= factor(rep(garaje,length(propiedad)),levels=garaje),
)
expand(amagor,nesting(propiedad,levels(tipo_pago)))
tibble(propiedad = factor(propiedad,levels=propiedad),
tipo_pago = factor( rep(tipo_pago,length(propiedad)),levels=tipo_pago))
dir('C:/Users/GFraga/Desktop/workshop_psychopy/images/CAToon_pics')
x <-dir('C:/Users/GFraga/Desktop/workshop_psychopy/images/CAToon_pics')
x <- as.data.frame(dir('C:/Users/GFraga/Desktop/workshop_psychopy/images/CAToon_pics'))
View(x)
View(x)
sd(1)
sd(c(1,2))
sd(c(1,2,6))
sd(c(0.01,0.02,0.2))
6/0.1
1.64*2.58
1.64*2
512*40
512*39
512*40
256*40
512*40
round(0.0505)
round(0.0505,3)
tmplist <- dir()
tmplist
eData_subjs <- c('My D','My V')
which(eData_subjs %in% tmpList)
which(eData_subjs %in% tempList)
which(eData_subjs %in% tmplist)
grep(eData_subj, tmplist)
eData_subjs
grep(eData_subj, tmplist)
grep(eData_subjs, tmplist)
grepl(eData_subjs, tmplist)
tmplist
eData_subjs
eData_subjs <- c('My D*','R*','ResultSummary*')
grepl(eData_subjs, tmplist)
which(eData_subjs %in% tmplist)
which(eData_subjs %in% tmplist)
data <- readxl::read_excel(fileinput)
library(crosstalk)
library(leaflet)
library(DT)
library(magick)
library(plotly)
# read data
fileinput <- 'C:/Users/GFraga/Desktop/AFFORD_THUMBS/Metadata.xlsx' # Path will change to read file from github repo
# here some validation checks should be included
data <- readxl::read_excel(fileinput)
plotly(data$SesID)
plotly(data$SubID)
plot_ly(data$SesID)
plot_ly(data, SesID)
plot_ly(data, data$SesID)
RStudio.Version()
install.packages('flexdashboard')
library(flexdashboard)
data
fileinput <- 'C:/Users/GFraga/Desktop/AFFORD_THUMBS/Metadata.xlsx'
data <- readxl::read_excel(fileinput)
data
data
sd
data$SesID
print(data$SesID)\
print(data$SesID)
# create package using devtools
devtools::create("mywidget")
# navigate to package dir
setwd("mywidget")
# create widget scaffolding
htmlwidgets::scaffoldWidget("mywidget")
# install the package so we can try it
devtools::install()
install.packages('devtools')
library(devtools)
install.packages('devtools')
install.packages("devtools")
library(devtools)
#| context: server
output$distPlot <- renderPlot({
x <- faithful[, 2]  # Old Faithful Geyser data
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white',
xlab = 'Waiting time to next eruption (in mins)',
main = 'Histogram of waiting times')
})
library(shiny)
sliderInput("bins", "Number of bins:",
min = 1, max = 50, value = 30)
plotOutput("distPlot")
getwd()
setwd('C:/Users/GFraga/Desktop/AFFORD_THUMBS/Spring/'
setwd('C:/Users/GFraga/Desktop/AFFORD_THUMBS/Spring/')
ls()
dir
dir()
fnames <- dir()
fnames
grepl('JP*',fnames)
fnames[grepl('JP*',fnames)]
dirinput <- setwd('C:/Users/GFraga/Desktop/AFFORD_THUMBS/Spring/')
fnames <- dir(dirinput)
fnames <- fnames[grepl('JP*',fnames)]
fnames
strsplit(filenames,'-')
strsplit(fnames,'-')
parts
parts <- strsplit(fnames,'-')
parts
parts[[1]]
parts[[]]
parts[[1]][1]
parts[[]][1]
parts[[:]][1]
parts[][1]
as.data.frame(fnames)
fnames <- as.data.frame(fnames[grepl('JP*',fnames)])
View(fnames)
fnames <- dir(dirinput)
fnames <- as.data.frame(fnames[grepl('^JP*',fnames)])
View(fnames)
library(stringr)
parts
fnames <- dir(dirinput)
str_split_fixed(parts,'-',2)
library(shiny); runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
csv_url <- 'https://github.com/gorkafraga/CRS/blob/main/AFFORD_data/Metadata_filenames_html.csv'
csv_url
runApp('AFFORD_shiny_filterPanels.R')
csv_url <- 'https://github.com/gorkafraga/CRS/blob/main/AFFORD_data/Metadata_filenames_html.csv'
fileiput <- read.csv(csv_url)
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
csv_url <- 'https://github.com/gorkafraga/CRS/blob/main/AFFORD_data/Metadata_filenames_html.csv'
fileinput <- read.csv(url(csv_url))
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
read_csv(url(csv_url))
read_csv(url(fileinput))
runApp('AFFORD_shiny_filterPanels.R')
readr::read_csv(url(csv_url))
Sys.getenv("VROOM_CONNECTION_SIZE")
Sys.setenv("VROOM_CONNECTION_SIZE")
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
readr::read_csv(url(csv_url))
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
csv_url <- "https://raw.githubusercontent.com/gorkafraga/CRS/main/AFFORD_data/Metadata_filenames_html.csv"
dat <- Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
csv_url <- "https://raw.githubusercontent.com/gorkafraga/CRS/main/AFFORD_data/Metadata_filenames_html.csv"
dat <- readr::read_csv2(url(csv_url))
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
csv_url <- "https://raw.githubusercontent.com/gorkafraga/CRS/main/AFFORD_data/Metadata_filenames_html.csv"
dat <- readr::read_csv(url(csv_url))
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
csv_url <- "https://raw.githubusercontent.com/gorkafraga/CRS/main/AFFORD_data/Metadata_filenames_html.csv"
dat <- readr::read_csv(url(csv_url),show_col_types = FALSE)
dat
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
url(csv_url)
x <- url(csv_url)
read_csv(x)
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
runApp('AFFORD_shiny_filterPanels.R')
#Load
library("jpeg")
library("tiff")
library('magick')
dirinput <- 'C:/Users/GFraga/Documents/GitHub/CRS/AFFORD_data/images/SPring-8_Preview_Slices_0749'
diroutput <- 'C:/Users/GFraga/Documents/GitHub/CRS/AFFORD_data/images/SPring-8_Preview_Slices_0749_compressed'
dir.create(diroutput)
fnames <- dir(dirinput)
fnames <- fnames[grepl('^JP*',fnames)]
f <- 1
fnames
fnames[1]
fnames[f]
split(fnames[f],'.')
strsplit(fnames[f],'.')[1]
strsplit(fnames[f],'.')[2]
strsplit(fnames[f],'.')
strsplit(fnames[f],'.tiff')
strsplit(fnames[f],"\.")
strsplit(fnames[f],".")
file.path(diroutput,gsub('.tif','.jpg',fnames[f]))
file.path(diroutput,gsub('.tif','.jpg',fnames[f]))
#Load
rm(list=ls())
library("jpeg")
library("tiff")
library('magick')
dirinput <- 'C:/Users/GFraga/Documents/GitHub/CRS/AFFORD_data/images/SPring-8_Preview_Slices_0749'
diroutput <- 'C:/Users/GFraga/Documents/GitHub/CRS/AFFORD_data/images/SPring-8_Preview_Slices_0749_compressed'
dir.create(diroutput)
fnames <- dir(dirinput)
fnames <- fnames[grepl('^JP*',fnames)]
setwd(dirinput)
for (f in 1:length(fnames)){
img <- magick::image_read(file.path(dirinput,fnames[f]))
img <- magick::image_resize(img, 300)
magick::image_write(img,file.path(diroutput,gsub('.tif','.jpg',fnames[f])), format='jpg')
}
runApp('~/GitHub/CRS/utilities/Shiny_AFFORD_image_explorer/AFFORD_shiny_filterPanels.R')
runApp('~/GitHub/CRS/utilities/Shiny_AFFORD_image_explorer/AFFORD_shiny_filterPanels.R')
runApp('~/GitHub/CRS/utilities/Shiny_AFFORD_image_explorer/AFFORD_shiny_filterPanels.R')
runApp('~/GitHub/CRS/utilities/Shiny_AFFORD_image_explorer/AFFORD_shiny_filterPanels.R')
runApp('~/GitHub/CRS/utilities/Shiny_AFFORD_image_explorer/AFFORD_shiny_filterPanels.R')
runApp('~/GitHub/CRS/utilities/Shiny_AFFORD_image_explorer/AFFORD_shiny_filterPanels.R')
runApp('~/GitHub/CRS/utilities/Shiny_AFFORD_image_explorer/AFFORD_shiny_filterPanels.R')
runApp('~/GitHub/CRS/utilities/Shiny_AFFORD_image_explorer/AFFORD_shiny_filterPanels.R')
