
# USER  --------------------------------------------------
#-------------------------------------------------
# Read filenames from directory
metadata <- read.csv('Metadata_filenames.csv')
folderWithPics <- paste0('Spring_jpg',.Platform$file.sep)
# add html component to column with file names
sourceAdress <- paste0(folderWithPics, metadata$file)
sourceAddress <- file.path('Spring_jpg', metadata$file)
metadata$pic <- paste0('<a href =\'',sourceAdress,' \'>',
                       '<img src=\'', sourceAdress, '\' height=\'70\' witdth = \'70\'',
                       'alt=\'Image\'','/> </a>')



## Filenames
con <- pool::dbPool(DBI::dbConnect(RSQLite::SQLite(), 'test.db'))
#crudr::cdr_make_db_tbls(con, iris)
crudr::cdr_make_db_tbls(con, metadata)


header <- shinydashboard::dashboardHeader(title = 'Tiny CRUDR Example')
sidebar <- shinydashboard::dashboardSidebar(
  shinydashboard::sidebarMenu(
    id = 'tabs',
    shinydashboard::menuItem(
      text = "Metadata",
      startExpanded = TRUE,
      shinydashboard::menuSubItem("Administrator Table", tabName = "datr_editable", icon = shiny::icon('edit')),
      shinydashboard::menuSubItem("Change Log", tabName = "datr_change_log"),
      shinydashboard::menuSubItem("Metadata End User View", tabName = "datr_end_usr")
    )))

body <- shinydashboard::dashboardBody(
  shinydashboard::tabItems(
    shinydashboard::tabItem(tabName = "datr_editable", crudr::cdr_deliver_admin_tbl('metadata')),
    shinydashboard::tabItem(tabName = "datr_change_log", crudr::cdr_deliver_chg_log_tbl('metadata')),
    shinydashboard::tabItem(tabName = "datr_end_usr", DT::DTOutput('metadata_db_data'))
  ))

ui <- shinydashboard::dashboardPage(header, sidebar, body)


# SERVER --------------------------------------------------
server <- function(input, output, session){
  
  metadata_r_tbl <- crudr::cdr_manage_db_tbls(
    db_tbl_name = 'metadata',
    key_col = 'UID',
    conn_pool = con,
    session = session,
    add_row_permission = T,
    del_row_permission = T,
    cell_edit_permission = T,
    lock_fields = c()
  )
  
  output$iris_db_data <- DT::renderDT(
    DT::formatDate(table   = DT::datatable(metadata_r_tbl(),escape=FALSE),
                   
                   columns = c('WHEN_EDITED_LAST'),
                   method  = 'toLocaleString')
  )
  
}

shiny::shinyApp(ui, server)