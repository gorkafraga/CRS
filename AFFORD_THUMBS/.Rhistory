searchPanes = list(show = FALSE), targets = c(1,2,3)
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = FALSE), targets = 1:2
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = TRUE), targets = 1:2
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = TRUE)
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = TRUE), targets = 0
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = TRUE), targets = 2
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = TRUE), targets = 1:2
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = TRUE),
targets = 1:2
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = FALSE),
targets = 1:2
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = FALSE)
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = FALSE),
targets = 0
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = FALSE),
targets = 1:3
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = FALSE),
targets = 'column'
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = FALSE),
targets = 'row'
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = FALSE),
targets = 'row'
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = FALSE),
targets = 6
))),
)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
#selection = 'none',
selection = 1,
escape = FALSE,
options = list(dom = 'Pfrtip', buttons=c('copy','csv','excel','pdf'),
columnDefs = list(list(
searchPanes = list(show = FALSE),
targets = 5
))),
)
metadata$seq
strsplit(sapply(strsplit(basenames, '_rec')
strsplit(sapply(strsplit(basenames, '_rec')))
sapply(strsplit(basenames, '_rec'))
sapply(strsplit(basenames, '_rec')
)
basenames
strsplit(basenames,'_rec')
strsplit(basenames_firstpart,'_rec')
sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[-1],collapse=''))
sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[-2],collapse=''))
sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[-3],collapse=''))
sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[-4],collapse=''))
sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[4],collapse=''))
sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[2],collapse=''))
sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[3],collapse=''))
sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[-1],collapse=''))
sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[1],collapse=''))
sapply(strsplit(basenames, '_rec'), '[[', 1)
basenames_firstpart
sapply(strsplit(basenames, '_rec'), '[[', 1)
sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[1],collapse=''))
basenames_firstpart
unique(metadata$seq)
unique(metadata$desc)
metadata$seq
grepl(metadata$seq,
's')
grepl(metadata$seq,'s*')
sapply(metadata$seq, function(x) grepl(x,'s*')
()
sapply(metadata$seq, function(x) grepl(x,'s*'))
which(sapply(metadata$seq, function(x) grepl(x,'s*')))
which(sapply(metadata$seq, function(x) grepl(x,'v*')))
sapply(metadata$seq, function(x) grepl(x,'v*'))
sapply(metadata$seq, function(x) grepl(x,'v.*'))
sapply(metadata$seq, function(x) grepl(v*'))
sapply(metadata$seq, function(x) grepl(v*'))
sapply(metadata$seq, function(x) grepl('v*',x))
sapply(metadata$seq, function(x) grepl('v.*',x))
which(sapply(metadata$seq, function(x) grepl('v.*',x)))
metadata$desc[which(sapply(metadata$seq, function(x) grepl('v.*',x)))] <- metadata$seq[which(sapply(metadata$seq, function(x) grepl('v.*',x)))]
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=FALSE)
library(DT)
library(dplyr)
#-------------------------------------------------
# Read filenames from directory
dirinput <-
'C:/Users/GFraga/Documents/GitHub/CRS_AFFORD/AFFORD_THUMBS/Spring/'
fnames <- dir(dirinput)
ext = '.jpg'
pattern = paste0('^JP*.*',ext,'$')
# Create metadata table
metadata <- as.data.frame(fnames[grepl(pattern, fnames)])
colnames(metadata) <- 'file'
# Fill metadata columns from different filename parts
basenames <- sapply(strsplit(metadata$file, ext), '[[', 1)
basenames_firstpart <- sapply(strsplit(basenames,'_'),'[[',1)
metadata$specID <- sapply(strsplit(basenames, '-'), '[[', 1)
metadata$status <- sapply(strsplit(basenames, '-'), '[[', 2)
metadata$scanID <- sapply(strsplit(basenames_firstpart, '-'), '[[', 3)
metadata$desc <- sapply(strsplit(basenames_firstpart, '-'), function(x) paste(x[-(1:3)], collapse = '-')) # take everything after the first 2 elements of the first part
#metadata$version <- sapply(strsplit(basenames,'-v'), function(x) paste0(x[-(1)],collapse = ''))
#metadata$version <- sapply(metadata$version, function(x) sub('_.*', '', x))
metadata$seq <- sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[-1],collapse=''))
# Move version info from desc to seq
metadata$desc[which(sapply(metadata$seq, function(x) grepl('v.*',x)))] <- metadata$seq[which(sapply(metadata$seq, function(x) grepl('v.*',x)))]
metadata$seq[which(sapply(metadata$seq, function(x) grepl('v.*',x)))] <- 'inconsistent filename'
# recording ID
metadata$rec <- sapply(strsplit(basenames, '_rec'), function(x) paste0('rec',x[(2)]))
# add html component to column with file namens
metadata$pic <- metadata$file
metadata$pic <- paste0('<img src=\'Spring/', metadata$pic, '\' height=\'50\' witdth = \'50\'></img>')
#metadata %>% relocate(file, .after = last_col())
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)
DT::formatStyle(columns = colnames(.), fontSize = '50%')
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
datatable(
metadata, filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)
metadata %>% DT::formatStyle(columns = colnames(.), fontSize = '50%')
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)
%>%
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)  %>%
metadata %>% DT::formatStyle(columns = colnames(.), fontSize = '50%')
library(DT)
library(dplyr)
#-------------------------------------------------
# Read filenames from directory
dirinput <-
'C:/Users/GFraga/Documents/GitHub/CRS_AFFORD/AFFORD_THUMBS/Spring/'
fnames <- dir(dirinput)
ext = '.jpg'
pattern = paste0('^JP*.*',ext,'$')
# Create metadata table
metadata <- as.data.frame(fnames[grepl(pattern, fnames)])
colnames(metadata) <- 'file'
# Fill metadata columns from different filename parts
basenames <- sapply(strsplit(metadata$file, ext), '[[', 1)
basenames_firstpart <- sapply(strsplit(basenames,'_'),'[[',1)
metadata$specID <- sapply(strsplit(basenames, '-'), '[[', 1)
metadata$status <- sapply(strsplit(basenames, '-'), '[[', 2)
metadata$scanID <- sapply(strsplit(basenames_firstpart, '-'), '[[', 3)
metadata$desc <- sapply(strsplit(basenames_firstpart, '-'), function(x) paste(x[-(1:3)], collapse = '-')) # take everything after the first 2 elements of the first part
#metadata$version <- sapply(strsplit(basenames,'-v'), function(x) paste0(x[-(1)],collapse = ''))
#metadata$version <- sapply(metadata$version, function(x) sub('_.*', '', x))
metadata$seq <- sapply(strsplit(sapply(strsplit(basenames, '_rec'), '[[', 1),'_'),function(x) paste(x[-1],collapse=''))
# Move version info from desc to seq
metadata$desc[which(sapply(metadata$seq, function(x) grepl('v.*',x)))] <- metadata$seq[which(sapply(metadata$seq, function(x) grepl('v.*',x)))]
metadata$seq[which(sapply(metadata$seq, function(x) grepl('v.*',x)))] <- 'inconsistent filename'
# recording ID
metadata$rec <- sapply(strsplit(basenames, '_rec'), function(x) paste0('rec',x[(2)]))
# add html component to column with file namens
metadata$pic <- metadata$file
metadata$pic <- paste0('<img src=\'Spring/', metadata$pic, '\' height=\'50\' witdth = \'50\'></img>')
#metadata %>% relocate(file, .after = last_col())
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)  %>%
metadata %>% DT::formatStyle(columns = colnames(.), fontSize = '50%')
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)  %>%
DT::formatStyle(columns = colnames(.), fontSize = '50%')
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)  %>%
DT::formatStyle(columns = colnames(.), fontSize = '50%')
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)  %>%
DT::formatStyle(columns = colnames(.), fontSize = '10%')
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)  %>%
DT::formatStyle(columns = 'file', fontSize = '10%')
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)  %>%
DT::formatStyle(columns = colnames(metadata), fontSize = '40%')
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)  %>%
DT::formatStyle(columns = colnames(), fontSize = '40%')
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)  %>%
DT::formatStyle(columns = colnames(metadata), fontSize = '40%')
# Dynamic table -------------------------------------------------
library(DT)
library(dplyr)
# Render table (ref https://www.rdocumentation.org/packages/DT/versions/0.28/topics/datatable)
metadata %>%
datatable(
filter = "top",
rownames=FALSE, width="100%",
class='compact cell-border hover', # CSS classes https://datatables.net/manual/styling/classes
extensions=c('Buttons','Select','SearchPanes'),
selection = 'none',
options=list(dom='Bfrtip', buttons=c('copy','csv','excel','pdf')),
escape=FALSE
)  %>%
DT::formatStyle(columns = colnames(file), fontSize = '10%')
